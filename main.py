from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import EventSourceResponse
import uvicorn
from pydantic import BaseModel, EmailStr, field_validator
import time

app = FastAPI()


@app.get("/events")
async def sse():
    def event_generator():
        while True:
            time.sleep(5)  # —Å–∏–º—É–ª—è—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
            yield f"data: {str(specialists)}\n\n"
    
    return EventSourceResponse(event_generator())


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
origins = [
    "https://fastapi-frontend-three.vercel.app",  # –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø —Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=["https://fastapi-frontend-three.vercel.app"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –¥–æ–º–µ–Ω—ã
    allow_credentials=True,
    allow_methods=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ HTTP –º–µ—Ç–æ–¥—ã
    allow_headers=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)


specialists = [
    {
        'id': 1,
        'role': '–ü—Å–∏—Ö–æ–ª–æ–≥',
        'name': '–ò–≤–∞–Ω',
        'email': 'ivan@gmail.ru'
    },
    {
        'id': 2,
        'role': '–ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç',
        'name': '–ù–∞—Ç–∞–ª—å—è',
        'email': 'node@gmail'
    },
]



@app.get('/specialists', tags=['–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã üë®‚Äç‚öïÔ∏è'], summary='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤')
def all_specialists():
    return specialists


@app.get('/specialists/{spec_id}', tags=['–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã üë®‚Äç‚öïÔ∏è'], summary='–ù–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞')
def get_specialist(spec_id: int):
    for specialist in specialists:
        if specialist['id'] == spec_id:
            return specialist
    raise HTTPException(status_code=404, detail='–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')



class NewSpecialist(BaseModel):
    role: str
    name: str
    email: EmailStr

    @field_validator("email")
    @classmethod
    def validate_email_domain(cls, value: str):
        if not value.endswith("@dbtplus.ru"):
            raise ValueError("Email –¥–æ–ª–∂–µ–Ω –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ @dbtplus.ru")
        return value



# –†—É—á–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
@app.post('/specialists')
def create_specialist(new_specialist: NewSpecialist):
    specialists.append({
        'id': len(specialists) + 1,
        'role': new_specialist.role,
        'name': new_specialist.name,
        'email': new_specialist.email,
    })
    return {'success': True, 'message': '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω'}




@app.get('/', summary='–ì–ª–∞–≤–Ω–∞—è —Ä—É—á–∫–∞', tags=['–û—Å–Ω–æ–≤–Ω—ã–µ —Ä—É—á–∫–∏'])
def home():
    return 'Hello from fastapi'


if __name__ == '__main__':
    uvicorn.run('main:app', host='0.0.0.0', port=8000, reload=True)